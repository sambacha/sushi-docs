"use strict";(self.webpackChunksushi_docs=self.webpackChunksushi_docs||[]).push([[5674],{3905:function(t,e,r){r.d(e,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var i=n.createContext({}),c=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},d=function(t){var e=c(t.components);return n.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,i=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),u=c(r),f=o,m=u["".concat(i,".").concat(f)]||u[f]||p[f]||a;return r?n.createElement(m,l(l({ref:e},d),{},{components:r})):n.createElement(m,l({ref:e},d))}));function f(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,l=new Array(a);l[0]=u;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:o,l[1]=s;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7812:function(t,e,r){r.r(e),r.d(e,{assets:function(){return d},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],s={sidebar_position:2},i="ConstantProductPoolFactory",c={unversionedId:"Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory",id:"Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory",title:"ConstantProductPoolFactory",description:"This contract is for deploying Trident Constant Product Pools with configurations.",source:"@site/docs/Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory.md",sourceDirName:"Developers/Trident/Pools/Constant Product",slug:"/Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory",permalink:"/docs/Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory",editUrl:"https://github.com/sushiswap/sushi-docs/edit/master/docs/Developers/Trident/Pools/Constant Product/ConstantProductPoolFactory.md",tags:[],version:"current",lastUpdatedBy:"Genghis Goose",lastUpdatedAt:1655325470,formattedLastUpdatedAt:"6/15/2022",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"ConstantProductPool",permalink:"/docs/Developers/Trident/Pools/Constant Product/ConstantProductPool"},next:{title:"ConstantProductPoolFactoryHelper",permalink:"/docs/Developers/Trident/Pools/Constant Product/ConstantProductPoolFactoryHelper"}},d={},p=[{value:"Functions",id:"functions",level:2},{value:"getDeployData",id:"getdeploydata",level:3},{value:"calculatePoolAddress",id:"calculatepooladdress",level:3},{value:"Parameters",id:"parameters",level:4}],u={toc:p};function f(t){var e=t.components,r=(0,o.Z)(t,l);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"constantproductpoolfactory"},"ConstantProductPoolFactory"),(0,a.kt)("p",null,"This contract is for deploying Trident Constant Product Pools with configurations."),(0,a.kt)("p",null,"The full contract can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/trident/blob/master/contracts/pool/constant-product/ConstantProductPoolFactory.sol"},"here"),"."),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"getdeploydata"},"getDeployData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function getDeployData() external view override returns (bytes memory, IMasterDeployer)\n")),(0,a.kt)("p",null,"Called in the constructor to populate deploy data."),(0,a.kt)("h3",{id:"calculatepooladdress"},"calculatePoolAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function calculatePoolAddress(\n        address token0,\n        address token1,\n        uint256 swapFee,\n        bool twapSupport\n    ) external view returns (address)\n")),(0,a.kt)("p",null,"Calculates a pool's address and returns it."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"token0")),(0,a.kt)("td",{parentName:"tr",align:"left"},"address"),(0,a.kt)("td",{parentName:"tr",align:"left"},"address of token0")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"token1")),(0,a.kt)("td",{parentName:"tr",align:"left"},"address"),(0,a.kt)("td",{parentName:"tr",align:"left"},"address of token1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"swapFee")),(0,a.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,a.kt)("td",{parentName:"tr",align:"left"},"swap fee")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"twapSupport")),(0,a.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,a.kt)("td",{parentName:"tr",align:"left"},"boolean for is pool using TWAP or not")))))}f.isMDXComponent=!0}}]);