"use strict";(self.webpackChunksushi_docs=self.webpackChunksushi_docs||[]).push([[7983],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),f=o,m=p["".concat(u,".").concat(f)]||p[f]||l[f]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1200:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return l}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={sidebar_position:4},u="Interfaces",d={unversionedId:"Developers/Furo/Interfaces",id:"Developers/Furo/Interfaces",title:"Interfaces",description:"Listed below are all of the interfaces used in the aforementioned Furo contracts.",source:"@site/docs/Developers/Furo/Interfaces.md",sourceDirName:"Developers/Furo",slug:"/Developers/Furo/Interfaces",permalink:"/docs/Developers/Furo/Interfaces",editUrl:"https://github.com/sushiswap/sushi-docs/edit/master/docs/Developers/Furo/Interfaces.md",tags:[],version:"current",lastUpdatedBy:"sam bacha",lastUpdatedAt:1653283771,formattedLastUpdatedAt:"5/23/2022",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"FuroVesting",permalink:"/docs/Developers/Furo/FuroVesting"},next:{title:"Overview",permalink:"/docs/Developers/Kashi Lending/Overview"}},c={},l=[{value:"IBentoBoxMinimal",id:"ibentoboxminimal",level:2},{value:"IERC20",id:"ierc20",level:2},{value:"IFuroStream",id:"ifurostream",level:2},{value:"IFuroVesting",id:"ifurovesting",level:2},{value:"ITasker",id:"itasker",level:2}],p={toc:l};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interfaces"},"Interfaces"),(0,a.kt)("p",null,"Listed below are all of the interfaces used in the aforementioned Furo contracts."),(0,a.kt)("h2",{id:"ibentoboxminimal"},"IBentoBoxMinimal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interface IBentoBoxMinimal {\n    function balanceOf(address, address) external view returns (uint256);\n\n    function toShare(\n        address token,\n        uint256 amount,\n        bool roundUp\n    ) external view returns (uint256 share);\n\n    function toAmount(\n        address token,\n        uint256 share,\n        bool roundUp\n    ) external view returns (uint256 amount);\n\n    function registerProtocol() external;\n\n    function deposit(\n        address token_,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 share\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\n\n    function withdraw(\n        address token_,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 share\n    ) external returns (uint256 amountOut, uint256 shareOut);\n\n    function transfer(\n        address token,\n        address from,\n        address to,\n        uint256 share\n    ) external;\n\n    function setMasterContractApproval(\n        address user,\n        address masterContract,\n        bool approved,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n")),(0,a.kt)("p",null,"Interface for a minimal version of the BentoBox contract; source code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/furo/blob/master/contracts/interfaces/IBentoBoxMinimal.sol"},"here"),"."),(0,a.kt)("h2",{id:"ierc20"},"IERC20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @notice EIP 2612\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n")),(0,a.kt)("p",null,"Standard ERC20 interface; source code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/furo/blob/master/contracts/interfaces/IERC20.sol"},"here"),"."),(0,a.kt)("h2",{id:"ifurostream"},"IFuroStream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interface IFuroStream {\n    function setBentoBoxApproval(\n        address user,\n        bool approved,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    function createStream(\n        address recipient,\n        address token,\n        uint64 startTime,\n        uint64 endTime,\n        uint256 amount, /// @dev in token amount and not in shares\n        bool fromBento\n    ) external payable returns (uint256 streamId, uint256 depositedShares);\n\n    function withdrawFromStream(\n        uint256 streamId,\n        uint256 sharesToWithdraw,\n        address withdrawTo,\n        bool toBentoBox,\n        bytes memory taskData\n    ) external returns (uint256 recipientBalance, address to);\n\n    function cancelStream(uint256 streamId, bool toBentoBox)\n        external\n        returns (uint256 senderBalance, uint256 recipientBalance);\n\n    function updateSender(uint256 streamId, address sender) external;\n\n    function updateStream(\n        uint256 streamId,\n        uint128 topUpAmount,\n        uint64 extendTime,\n        bool fromBentoBox\n    ) external returns (uint256 depositedShares);\n\n    function streamBalanceOf(uint256 streamId)\n        external\n        view\n        returns (uint256 senderBalance, uint256 recipientBalance);\n\n    function getStream(uint256 streamId) external view returns (Stream memory);\n\n    event CreateStream(\n        uint256 indexed streamId,\n        address indexed sender,\n        address indexed recipient,\n        address token,\n        uint256 amount,\n        uint256 startTime,\n        uint256 endTime,\n        bool fromBentoBox\n    );\n\n    event UpdateStream(\n        uint256 indexed streamId,\n        uint128 indexed topUpAmount,\n        uint64 indexed extendTime,\n        bool fromBentoBox\n    );\n\n    event Withdraw(\n        uint256 indexed streamId,\n        uint256 indexed sharesToWithdraw,\n        address indexed withdrawTo,\n        address token,\n        bool toBentoBox\n    );\n\n    event CancelStream(\n        uint256 indexed streamId,\n        uint256 indexed senderBalance,\n        uint256 indexed recipientBalance,\n        address token,\n        bool toBentoBox\n    );\n\n    struct Stream {\n        address sender;\n        address token;\n        uint128 depositedShares;\n        uint128 withdrawnShares;\n        uint64 startTime;\n        uint64 endTime;\n    }\n}\n")),(0,a.kt)("p",null,"Interface for the FuroStream contract; source code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/furo/blob/master/contracts/interfaces/IFuroStream.sol"},"here"),"."),(0,a.kt)("h2",{id:"ifurovesting"},"IFuroVesting"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interface IFuroVesting {\n    function setBentoBoxApproval(\n        address user,\n        bool approved,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    function createVesting(\n        IERC20 token,\n        address recipient,\n        uint32 start,\n        uint32 cliffDuration,\n        uint32 stepDuration,\n        uint32 steps,\n        uint128 cliffAmount,\n        uint128 stepAmount,\n        bool fromBentoBox\n    ) external payable returns (uint256 depositedShares, uint256 vestId);\n\n    function withdraw(\n        uint256 vestId,\n        bytes memory taskData,\n        bool toBentoBox\n    ) external;\n\n    function stopVesting(uint256 vestId, bool toBentoBox) external;\n\n    function vestBalance(uint256 vestId) external view returns (uint256);\n\n    function updateOwner(uint256 vestId, address newOwner) external;\n\n    struct Vest {\n        address owner;\n        IERC20 token;\n        uint32 start;\n        uint32 cliffDuration;\n        uint32 stepDuration;\n        uint32 steps;\n        uint128 cliffAmount;\n        uint128 stepAmount;\n        uint128 claimed;\n    }\n\n    event CreateVesting(\n        uint256 indexed vestId,\n        IERC20 token,\n        address indexed owner,\n        address indexed recipient,\n        uint32 start,\n        uint32 cliffDuration,\n        uint32 stepDuration,\n        uint32 steps,\n        uint128 cliffAmount,\n        uint128 stepAmount,\n        bool fromBentoBox\n    );\n\n    event Withdraw(\n        uint256 indexed vestId,\n        IERC20 indexed token,\n        uint256 indexed amount,\n        bool toBentoBox\n    );\n\n    event CancelVesting(\n        uint256 indexed vestId,\n        uint256 indexed ownerAmount,\n        uint256 indexed recipientAmount,\n        IERC20 token,\n        bool toBentoBox\n    );\n\n    event LogUpdateOwner(uint256 indexed vestId, address indexed newOwner);\n}\n")),(0,a.kt)("p",null,"Interface for the FuroVesting contract; source code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/furo/blob/master/contracts/interfaces/IFuroVesting.sol"},"here"),"."),(0,a.kt)("h2",{id:"itasker"},"ITasker"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"interface ITasker {\n    function onTaskReceived(\n        bytes calldata data\n    ) external;\n}\n")),(0,a.kt)("p",null,"Interface for the Tasker contract; source code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/furo/blob/master/contracts/interfaces/ITasker.sol"},"here"),"."))}f.isMDXComponent=!0}}]);