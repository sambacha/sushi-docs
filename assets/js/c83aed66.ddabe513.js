"use strict";(self.webpackChunksushi_docs=self.webpackChunksushi_docs||[]).push([[7013],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=d(t),p=a,m=f["".concat(u,".").concat(p)]||f[p]||c[p]||s;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=f;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var d=2;d<s;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1083:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),i=["components"],o={sidebar_position:3},u="Interfaces",d={unversionedId:"Developers/Kashi Lending/Interfaces",id:"Developers/Kashi Lending/Interfaces",title:"Interfaces",description:"Listed below are all of the interfaces used in the aforementioned Kashi contract.",source:"@site/docs/Developers/Kashi Lending/Interfaces.md",sourceDirName:"Developers/Kashi Lending",slug:"/Developers/Kashi Lending/Interfaces",permalink:"/docs/Developers/Kashi Lending/Interfaces",editUrl:"https://github.com/sushiswap/sushi-docs/edit/master/docs/Developers/Kashi Lending/Interfaces.md",tags:[],version:"current",lastUpdatedBy:"sam bacha",lastUpdatedAt:1653283771,formattedLastUpdatedAt:"5/23/2022",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"KashiPair",permalink:"/docs/Developers/Kashi Lending/KashiPair"},next:{title:"Overview",permalink:"/docs/Developers/Miso/Overview"}},l={},c=[{value:"IKashiPair",id:"ikashipair",level:2},{value:"IOracle",id:"ioracle",level:2},{value:"ISwapper",id:"iswapper",level:2}],f={toc:c};function p(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"interfaces"},"Interfaces"),(0,s.kt)("p",null,"Listed below are all of the interfaces used in the aforementioned Kashi contract."),(0,s.kt)("h2",{id:"ikashipair"},"IKashiPair"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"interface IKashiPair {\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    event LogAccrue(uint256 accruedAmount, uint256 feeFraction, uint64 rate, uint256 utilization);\n    event LogAddAsset(address indexed from, address indexed to, uint256 share, uint256 fraction);\n    event LogAddCollateral(address indexed from, address indexed to, uint256 share);\n    event LogBorrow(address indexed from, address indexed to, uint256 amount, uint256 part);\n    event LogExchangeRate(uint256 rate);\n    event LogFeeTo(address indexed newFeeTo);\n    event LogRemoveAsset(address indexed from, address indexed to, uint256 share, uint256 fraction);\n    event LogRemoveCollateral(address indexed from, address indexed to, uint256 share);\n    event LogRepay(address indexed from, address indexed to, uint256 amount, uint256 part);\n    event LogWithdrawFees(address indexed feeTo, uint256 feesEarnedFraction);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function accrue() external;\n\n    function accrueInfo()\n        external\n        view\n        returns (\n            uint64 interestPerSecond,\n            uint64 lastBlockAccrued,\n            uint128 feesEarnedFraction\n        );\n\n    function addAsset(\n        address to,\n        bool skim,\n        uint256 share\n    ) external returns (uint256 fraction);\n\n    function addCollateral(\n        address to,\n        bool skim,\n        uint256 share\n    ) external;\n\n    function allowance(address, address) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function asset() external view returns (IERC20);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function bentoBox() external view returns (IBentoBoxV1);\n\n    function borrow(address to, uint256 amount) external returns (uint256 part, uint256 share);\n\n    function claimOwnership() external;\n\n    function collateral() external view returns (IERC20);\n\n    function cook(\n        uint8[] calldata actions,\n        uint256[] calldata values,\n        bytes[] calldata datas\n    ) external payable returns (uint256 value1, uint256 value2);\n\n    function decimals() external view returns (uint8);\n\n    function exchangeRate() external view returns (uint256);\n\n    function feeTo() external view returns (address);\n\n    function getInitData(\n        IERC20 collateral_,\n        IERC20 asset_,\n        IOracle oracle_,\n        bytes calldata oracleData_\n    ) external pure returns (bytes memory data);\n\n    function init(bytes calldata data) external payable;\n\n    function isSolvent(address user, bool open) external view returns (bool);\n\n    function liquidate(\n        address[] calldata users,\n        uint256[] calldata borrowParts,\n        address to,\n        ISwapper swapper,\n        bool open\n    ) external;\n\n    function masterContract() external view returns (address);\n\n    function name() external view returns (string memory);\n\n    function nonces(address) external view returns (uint256);\n\n    function oracle() external view returns (IOracle);\n\n    function oracleData() external view returns (bytes memory);\n\n    function owner() external view returns (address);\n\n    function pendingOwner() external view returns (address);\n\n    function permit(\n        address owner_,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    function removeAsset(address to, uint256 fraction) external returns (uint256 share);\n\n    function removeCollateral(address to, uint256 share) external;\n\n    function repay(\n        address to,\n        bool skim,\n        uint256 part\n    ) external returns (uint256 amount);\n\n    function setFeeTo(address newFeeTo) external;\n\n    function setSwapper(ISwapper swapper, bool enable) external;\n\n    function swappers(ISwapper) external view returns (bool);\n\n    function symbol() external view returns (string memory);\n\n    function totalAsset() external view returns (uint128 elastic, uint128 base);\n\n    function totalBorrow() external view returns (uint128 elastic, uint128 base);\n\n    function totalCollateralShare() external view returns (uint256);\n\n    function totalSupply() external view returns (uint256);\n\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    function transferOwnership(\n        address newOwner,\n        bool direct,\n        bool renounce\n    ) external;\n\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\n\n    function userBorrowPart(address) external view returns (uint256);\n\n    function userCollateralShare(address) external view returns (uint256);\n\n    function withdrawFees() external;\n}\n")),(0,s.kt)("p",null,"Interface for the Kashi contract; source code can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/kashi-lending/blob/master/contracts/interfaces/IKashiPair.sol"},"here"),"."),(0,s.kt)("h2",{id:"ioracle"},"IOracle"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"interface IOracle {\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\n\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\n\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\n\n    function symbol(bytes calldata data) external view returns (string memory);\n\n    function name(bytes calldata data) external view returns (string memory);\n}\n")),(0,s.kt)("p",null,"Interface for the Oracle; source code can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/kashi-lending/blob/master/contracts/interfaces/IOracle.sol"},"here"),"."),(0,s.kt)("h2",{id:"iswapper"},"ISwapper"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"interface ISwapper {\n\n    function swap(\n        IERC20 fromToken,\n        IERC20 toToken,\n        address recipient,\n        uint256 shareToMin,\n        uint256 shareFrom\n    ) external returns (uint256 extraShare, uint256 shareReturned);\n\n    function swapExact(\n        IERC20 fromToken,\n        IERC20 toToken,\n        address recipient,\n        address refundTo,\n        uint256 shareFromSupplied,\n        uint256 shareToExact\n    ) external returns (uint256 shareUsed, uint256 shareReturned);\n}\n")),(0,s.kt)("p",null,"Interface for the swapper contract; source code can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/kashi-lending/blob/master/contracts/interfaces/ISwapper.sol"},"here"),"."))}p.isMDXComponent=!0}}]);