"use strict";(self.webpackChunksushi_docs=self.webpackChunksushi_docs||[]).push([[2998],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return u}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),d=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),k=d(a),u=n,f=k["".concat(p,".").concat(u)]||k[u]||s[u]||l;return a?r.createElement(f,i(i({ref:e},m),{},{components:a})):r.createElement(f,i({ref:e},m))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:n,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},606:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s}});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),i=["components"],o={sidebar_position:6},p="MISOMasterChef",d={unversionedId:"Developers/Miso/MISOMasterChef",id:"Developers/Miso/MISOMasterChef",title:"MISOMasterChef",description:"The MISOMasterChef contract is in charge of alll the rewards in MISO... he's kind of a big deal.",source:"@site/docs/Developers/Miso/MISOMasterChef.md",sourceDirName:"Developers/Miso",slug:"/Developers/Miso/MISOMasterChef",permalink:"/docs/Developers/Miso/MISOMasterChef",editUrl:"https://github.com/sushiswap/sushi-docs/edit/master/docs/Developers/Miso/MISOMasterChef.md",tags:[],version:"current",lastUpdatedBy:"sam bacha",lastUpdatedAt:1653283771,formattedLastUpdatedAt:"5/23/2022",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"MISOMarket",permalink:"/docs/Developers/Miso/MISOMarket"},next:{title:"MISOTokenFactory",permalink:"/docs/Developers/Miso/MISOTokenFactory"}},m={},s=[{value:"Functions",id:"functions",level:2},{value:"getInitData",id:"getinitdata",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"setBonus",id:"setbonus",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"poolLength",id:"poollength",level:3},{value:"addToken",id:"addtoken",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"set",id:"set",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"getMultiplier",id:"getmultiplier",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"pendingRewards",id:"pendingrewards",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"massUpdatePools",id:"massupdatepools",level:3},{value:"updatePool",id:"updatepool",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"deposit",id:"deposit",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"withdraw",id:"withdraw",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"emergencyWithdraw",id:"emergencywithdraw",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"safeRewardsTransfer",id:"saferewardstransfer",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"tokensRemaining",id:"tokensremaining",level:3},{value:"tokenDebt",id:"tokendebt",level:3},{value:"blocksRemaining",id:"blocksremaining",level:3},{value:"claimTips",id:"claimtips",level:3},{value:"dev",id:"dev",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"setDevPercentage",id:"setdevpercentage",level:3},{value:"Parameters",id:"parameters-12",level:4}],k={toc:s};function u(t){var e=t.components,a=(0,n.Z)(t,i);return(0,l.kt)("wrapper",(0,r.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"misomasterchef"},"MISOMasterChef"),(0,l.kt)("p",null,"The MISOMasterChef contract is in charge of alll the rewards in MISO... he's kind of a big deal."),(0,l.kt)("p",null,"The full contract can be found ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/miso/blob/canary/contracts/Farms/MISOMasterChef.sol"},"here"),"."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"getinitdata"},"getInitData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function getInitData(\n            address _rewards,\n            uint256 _rewardsPerBlock,\n            uint256 _startBlock,\n            address _divaddr,\n            address _accessControls\n    )\n        external\n        pure\n        returns (bytes memory _data)\n")),(0,l.kt)("p",null,"Generates the init data for Farm Factory."),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_rewards")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"rewards token address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_rewardsPerBlock")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"rewards per block for whole farm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_startBlock")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"starting block")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_divaddr")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"any donations if set are sent here")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_accessControls")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"address of accessControls")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_data")),(0,l.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,l.kt)("td",{parentName:"tr",align:"left"},"abi-encoded parameters")))),(0,l.kt)("h3",{id:"setbonus"},"setBonus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function setBonus(\n        uint256 _bonusEndBlock,\n        uint256 _bonusMultiplier\n    ) public\n")),(0,l.kt)("p",null,"Sets the bonus rewards for the farm. Can only be called by the owner of the contract. !!"),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_bonusEndBlock")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"block to end the bonus on")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_rewardsPerBlock")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"amount of bonus per block to award")))),(0,l.kt)("h3",{id:"poollength"},"poolLength"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function poolLength() external view returns (uint256)\n")),(0,l.kt)("p",null,"View function that returns how many pools are in the farm. !!"),(0,l.kt)("h3",{id:"addtoken"},"addToken"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function addToken(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public\n")),(0,l.kt)("p",null,"Adds a new LP to the pool. Can only be called by the owner of the contract."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," ",(0,l.kt)("em",{parentName:"p"},"Do ",(0,l.kt)("strong",{parentName:"em"},"NOT")," add the same LP token more than once; rewards will be messed up if you do!")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_allocPoint")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"allocation point for the LP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_lpToken")),(0,l.kt)("td",{parentName:"tr",align:"left"},"IERC20"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the LP token to be added")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_withUpdate")),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"},"boolean of whether update has started or not")))),(0,l.kt)("h3",{id:"set"},"set"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public\n")),(0,l.kt)("p",null,"Updates the given pool's token allocation point. Can only be called by the owner of the contract."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID that you want to change the allocation point for")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_allocPoint")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"LP allocation point to change to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_withUpdate")),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"},"boolean of whether update has started or not")))),(0,l.kt)("h3",{id:"getmultiplier"},"getMultiplier"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the reward multiplier over the given ",(0,l.kt)("inlineCode",{parentName:"p"},"_from")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"_to")," block."),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_from")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"block to start calculating the reward multiplier from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_to")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"block to stop calculating the reward multiplier up to")))),(0,l.kt)("h3",{id:"pendingrewards"},"pendingRewards"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function pendingRewards(uint256 _pid, address _user) external view returns (uint256)\n")),(0,l.kt)("p",null,"View function to see pending token rewards on the frontend."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID of pool to check rewards from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"address of user to check rewards for")))),(0,l.kt)("h3",{id:"massupdatepools"},"massUpdatePools"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function massUpdatePools() public\n")),(0,l.kt)("p",null,"Updates the reward variables for ",(0,l.kt)("em",{parentName:"p"},"all")," pools."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," ",(0,l.kt)("em",{parentName:"p"},"Be careful of gas spending!")),(0,l.kt)("h3",{id:"updatepool"},"updatePool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function updatePool(uint256 _pid) public\n")),(0,l.kt)("p",null,"Updates the reward variables of a given pool to be up-to-date."),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID of pool to update rewards for")))),(0,l.kt)("h3",{id:"deposit"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function deposit(uint256 _pid, uint256 _amount) public\n")),(0,l.kt)("p",null,"Deposits LP tokens to MasterChef for rewards allocation."),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID of pool to deposit LP tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"amount of LP tokens to deposit")))),(0,l.kt)("h3",{id:"withdraw"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function withdraw(uint256 _pid, uint256 _amount) public\n")),(0,l.kt)("p",null,"Withdraws LP tokens from MasterChef."),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID of pool to withdraw LP tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"amount of LP tokens to withdraw")))),(0,l.kt)("h3",{id:"emergencywithdraw"},"emergencyWithdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function emergencyWithdraw(uint256 _pid) public\n")),(0,l.kt)("p",null,"Withdraws LP without caring for rewards. ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Use in EMERGENCIES only"))),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_pid")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"pool ID of pool to emergency withdraw from")))),(0,l.kt)("h3",{id:"saferewardstransfer"},"safeRewardsTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function safeRewardsTransfer(address _to, uint256 _amount) internal\n")),(0,l.kt)("p",null,"An internal safe rewards transfer function, used in case of rounding errors causing a pool to not have enough tokens."),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_to")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"address to transfer tokens to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"amount of tokens to transfer")))),(0,l.kt)("h3",{id:"tokensremaining"},"tokensRemaining"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function tokensRemaining() public view returns(uint256)\n")),(0,l.kt)("p",null,"View function that returns how many tokens the farm is holding. !!"),(0,l.kt)("h3",{id:"tokendebt"},"tokenDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function tokenDebt() public view returns(uint256)\n")),(0,l.kt)("p",null,"View function that returns the total amount of token debt. !!"),(0,l.kt)("h3",{id:"blocksremaining"},"blocksRemaining"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function blocksRemaining() public view returns (uint256)\n")),(0,l.kt)("p",null,"View function that returns the number of blocks remining with the current rewards balance."),(0,l.kt)("h3",{id:"claimtips"},"claimTips"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function claimTips() public\n")),(0,l.kt)("p",null,"Claims any rewards for the developers, if set."),(0,l.kt)("h3",{id:"dev"},"dev"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function dev(address _devaddr) public\n")),(0,l.kt)("p",null,"Update the developer address, by the previous dev (ie, can only be set by the previous ",(0,l.kt)("inlineCode",{parentName:"p"},"devaddr"),")."),(0,l.kt)("h4",{id:"parameters-11"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_devaddr")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"new dev address to set to")))),(0,l.kt)("h3",{id:"setdevpercentage"},"setDevPercentage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function setDevPercentage(uint256 _devPercentage) public\n")),(0,l.kt)("p",null,"Updates the developer percentage, if applicable."),(0,l.kt)("h4",{id:"parameters-12"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_devPercentage")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"dev percentage to update to")))))}u.isMDXComponent=!0}}]);