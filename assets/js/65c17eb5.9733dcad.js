"use strict";(self.webpackChunksushi_docs=self.webpackChunksushi_docs||[]).push([[8034],{3905:function(t,e,a){a.d(e,{Zo:function(){return d},kt:function(){return u}});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),p=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=p(a),u=n,h=m["".concat(s,".").concat(u)]||m[u]||k[u]||i;return a?r.createElement(h,l(l({ref:e},d),{},{components:a})):r.createElement(h,l({ref:e},d))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4922:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return k}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],o={sidebar_position:6},s="SushiMakerKashi",p={unversionedId:"Developers/Sushiswap/SushiMakerKashi",id:"Developers/Sushiswap/SushiMakerKashi",title:"SushiMakerKashi",description:'SushiMakerKashi handles "serving up" rewards for xSUSHI holders by trading tokens collected from Kashi fees for SUSHI.',source:"@site/docs/Developers/Sushiswap/SushiMakerKashi.md",sourceDirName:"Developers/Sushiswap",slug:"/Developers/Sushiswap/SushiMakerKashi",permalink:"/docs/Developers/Sushiswap/SushiMakerKashi",editUrl:"https://github.com/sushiswap/sushi-docs/edit/master/docs/Developers/Sushiswap/SushiMakerKashi.md",tags:[],version:"current",lastUpdatedBy:"sam bacha",lastUpdatedAt:1653283771,formattedLastUpdatedAt:"5/23/2022",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"SushiMaker",permalink:"/docs/Developers/Sushiswap/SushiMaker"},next:{title:"SushiRoll",permalink:"/docs/Developers/Sushiswap/SushiRoll"}},d={},k=[{value:"Functions",id:"functions",level:2},{value:"setBridge",id:"setbridge",level:3},{value:"Parameters",id:"parameters",level:4},{value:"convert",id:"convert",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"convertMultiple",id:"convertmultiple",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"_convert",id:"_convert",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"_convertStep",id:"_convertstep",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns",level:4},{value:"_swap",id:"_swap",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-1",level:4}],m={toc:k};function u(t){var e=t.components,a=(0,n.Z)(t,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sushimakerkashi"},"SushiMakerKashi"),(0,i.kt)("p",null,'SushiMakerKashi handles "serving up" rewards for xSUSHI holders by trading tokens collected from Kashi fees for SUSHI.'),(0,i.kt)("p",null,"The full contract can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/sushiswap/sushiswap/blob/canary/contracts/SushiMakerKashi.sol"},"here"),"."),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"setbridge"},"setBridge"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function setBridge(address token, address bridge) external onlyOwner\n")),(0,i.kt)("p",null,"Sets the bridge for the given token and bridge addresses. Can only be called by the owner of the contract."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"token")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token you wish to bridge")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bridge")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token bridge you wish to use")))),(0,i.kt)("h3",{id:"convert"},"convert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function convert(IKashiWithdrawFee kashiPair) external onlyEOA\n")),(0,i.kt)("p",null,"Calls the private ",(0,i.kt)("inlineCode",{parentName:"p"},"_convert")," function which converts the given Kashi Pair into Bento shares, then into the underlying Kashi asset. !!"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"kashiPair")),(0,i.kt)("td",{parentName:"tr",align:"left"},"IKashiWithdrawFee"),(0,i.kt)("td",{parentName:"tr",align:"left"},"kashi pair to convert")))),(0,i.kt)("h3",{id:"convertmultiple"},"convertMultiple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function convertMultiple(IKashiWithdrawFee[] calldata kashiPair) external onlyEOA\n")),(0,i.kt)("p",null,"Calls the private ",(0,i.kt)("inlineCode",{parentName:"p"},"_convert")," function which converts the given Kashi Pairs into Bento shares, then into the underlying Kashi assets."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"kashiPair")),(0,i.kt)("td",{parentName:"tr",align:"left"},"IKashiWithdrawFee[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"array of kashi pairs to convert")))),(0,i.kt)("h3",{id:"_convert"},"_","convert"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function _convert(IKashiWithdrawFee kashiPair) private\n")),(0,i.kt)("p",null,"Private function used in ",(0,i.kt)("inlineCode",{parentName:"p"},"convert")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"convertMultiple")," which converts the given Kashi Pair into Bento shares, then into the underlying Kashi asset."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"kashiPair")),(0,i.kt)("td",{parentName:"tr",align:"left"},"IKashiWithdrawFee"),(0,i.kt)("td",{parentName:"tr",align:"left"},"kashi pair to convert")))),(0,i.kt)("h3",{id:"_convertstep"},"_","convertStep"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function _convertStep(address token0, uint256 amount0) private returns (uint256 sushiOut)\n")),(0,i.kt)("p",null,"Private function that calculates and returns the amount of SUSHI to be given after conversion. !!"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"token0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token you wish to convert")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amount0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"amount of token to convert")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"sushiOut")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"amount of SUSHI after conversion")))),(0,i.kt)("h3",{id:"_swap"},"_","swap"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"function _swap(\n        address fromToken,\n        address toToken,\n        uint256 amountIn,\n        address to\n    ) private returns (uint256 amountOut)\n")),(0,i.kt)("p",null,"Private function that swaps the tokens with the bridge and returns the amount of the new token. !!"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromToken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token you wish to bridge")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toToken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token you wish to swap to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amountIn")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"amount of token to swap")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"address of token bridge you wish to use")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amountOut")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"amount of ",(0,i.kt)("inlineCode",{parentName:"td"},"toToken")," after conversion from ",(0,i.kt)("inlineCode",{parentName:"td"},"fromToken"))))))}u.isMDXComponent=!0}}]);